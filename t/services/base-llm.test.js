// Generated by CoffeeScript 2.7.0
(function() {
  // BaseLLM Tests (CommonJS)
  var assert, beforeEach, describe, it, mock;

  ({describe, it, beforeEach} = require('node:test'));

  assert = require('node:assert');

  ({mock} = require('node:test'));

  // We'll need to update these paths when the source files are converted
  // BaseLLM = require '../../src/services/base-llm'

  // For now, let's create a simple test structure
  describe('BaseLLM', function() {
    var mockAxios, mockNeo4j;
    mockAxios = null;
    mockNeo4j = null;
    beforeEach(function() {
      // Create mocks using Node's built-in mock
      mockAxios = {
        post: mock.fn(),
        get: mock.fn()
      };
      return mockNeo4j = {
        connect: mock.fn(),
        executeQuery: mock.fn(),
        naturalLanguageQuery: mock.fn()
      };
    });
    describe('mock setup', function() {
      it('should have mock functions', function() {
        assert.ok(mockAxios.post.mock);
        assert.ok(mockAxios.get.mock);
        return assert.ok(mockNeo4j.connect.mock);
      });
      return it('should track calls', function() {
        mockAxios.post('test', {
          data: 'test'
        });
        assert.equal(mockAxios.post.mock.calls.length, 1);
        return assert.equal(mockAxios.post.mock.calls[0].arguments[0], 'test');
      });
    });
    return describe('basic tests', function() {
      it('should work with assertions', function() {
        assert.equal(1 + 1, 2);
        assert.ok(true);
        return assert.deepEqual({
          a: 1
        }, {
          a: 1
        });
      });
      return it('should handle async tests', async function() {
        var result;
        result = (await Promise.resolve('async value'));
        return assert.equal(result, 'async value');
      });
    });
  });

}).call(this);
